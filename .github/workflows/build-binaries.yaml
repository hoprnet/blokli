#################################################################################
# Pipeline to build binaries
#################################################################################
name: Build binaries
on:
  workflow_call:
    inputs:
      branch:
        required: true
        type: string
      runner:
        required: true
        type: string
      architecture:
        required: true
        type: string
      version_type:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      runner:
        type: choice
        options:
          - self-hosted-hoprnet-bigger
          - macos-13
          - macos-15
        required: true
        description: "GH Runner to use: macos-13=x86_64-darwin and macos-15=aarch64-darwin"
      architecture:
        type: choice
        options:
          - x86_64-linux
          - aarch64-darwin
          - x86_64-darwin
        required: true
        description: "Architecture to build for"
concurrency:
  group: ${{ github.ref }}-build-binary-${{ inputs.architecture }}
  cancel-in-progress: true
jobs:
  binary:
    if: >-
      github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.event.action != 'closed' && contains(github.event.pull_request.labels.*.name, format('binary:{0}', inputs.architecture))) || (github.event_name == 'pull_request' && github.event.pull_request.merged)
    runs-on: ${{ github.event.inputs.runner || inputs.runner }}
    timeout-minutes: 60
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo: true
          egress-policy: audit

      - name: Set environment variables
        id: vars
        run: |
          declare branch architecture publish_type
          if [[ "${{ inputs.branch }}" != "" ]]; then
            echo "The workflow is triggered by other pipeline"
            # It can be triggered by the build, merge or release pipelines
            branch=${{ inputs.branch }}
            architecture=${{ inputs.architecture }}
            if [[ "${{ inputs.runner }}" =~ ".*-bigger" ]]; then
              requires_nix='false'
            else
              requires_nix='true'
            fi
          else
            echo "The workflow is triggered manually"
            branch=${{ github.ref_name }}
            architecture=${{ github.event.inputs.architecture }}
            if [[ "${{ github.event.inputs.runner }}" =~ ".*-bigger" ]]; then
              requires_nix='false'
            else
              requires_nix='true'
            fi
          fi
          echo "Invocation parameters:"
          echo "branch=${branch}" | tee -a $GITHUB_OUTPUT
          echo "architecture=${architecture}" | tee -a $GITHUB_OUTPUT
          echo "requires_nix=${requires_nix}" | tee -a $GITHUB_OUTPUT

      - name: Checkout hoprnet repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ref: ${{ steps.vars.outputs.branch }}

      - name: Install Nix
        if: steps.vars.outputs.requires_nix == 'true'
        uses: cachix/install-nix-action@7be5dee1421f63d07e71ce6e0a9f8a4b07c2a487 # v31

      - name: Use Nix Cache
        if: steps.vars.outputs.requires_nix == 'true'
        uses: cachix/cachix-action@0fc020193b5a1fa3ac4575aa3a7d3aa6a35435ad # v16
        with:
          name: blokli
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
        env:
          USER: runner

      - name: Get PR labels
        id: pr-labels
        uses: joerick/pr-labels-action@0543b277721e852d821c6738d449f2f4dea03d5f # v1.0.9

      - name: Get version
        if: inputs.version_type != ''
        id: version
        run: |
          set -x
          base_version=$(grep -E '^version\s*=' bloklid/Cargo.toml | awk -F\" '{print $2}')
          if [[ "${{ inputs.version_type }}" == "commit" ]]; then
            bump_version=${base_version}+commit.$(git rev-parse --short HEAD)
            echo "binary_version=${bump_version}" | tee -a $GITHUB_OUTPUT
            if [ "${GITHUB_PR_LABEL_PUBLISH_COMMITS:-0}" == '1' ]; then
              echo "publish_type=artifact-registry" | tee -a $GITHUB_OUTPUT
            else
              echo "publish_type=workflow" | tee -a $GITHUB_OUTPUT
            fi
          elif [[ "${{ inputs.version_type }}" == "pr" ]]; then
            bump_version=${base_version}+pr.${{ github.event.pull_request.number }}
            echo "binary_version=${bump_version}" | tee -a $GITHUB_OUTPUT
            echo "publish_type=artifact-registry" | tee -a $GITHUB_OUTPUT
          elif [[ "${{ inputs.version_type }}" == "release" ]]; then
            bump_version=${base_version}
            echo "binary_version=${bump_version}" | tee -a $GITHUB_OUTPUT
            echo "publish_type=github" | tee -a $GITHUB_OUTPUT
          else
            echo "Invalid version type"
            exit 1
          fi
          sed -i.bak -E "s/(^version = \")([0-9]+\.[0-9]+\.[0-9]+)(\")/\1${bump_version}\3/" bloklid/Cargo.toml
          nix develop --command cargo generate-lockfile
          rm bloklid/Cargo.toml.bak

      - name: Build binary ${{ steps.vars.outputs.architecture}}
        run: |
          nix develop --command just build-release ${{ steps.vars.outputs.architecture}}
          if [[ "${{ inputs.version_type }}" == "commit" ]]; then
            mv ./result/bin/bloklid result/bin/bloklid-${{ steps.vars.outputs.architecture}}-${{ steps.version.outputs.binary_version }}
          else
            mv ./result/bin/bloklid result/bin/bloklid-${{ steps.vars.outputs.architecture}}
          fi
      - name: Setup GCP
        if: steps.version.outputs.publish_type == 'artifact-registry' || steps.version.outputs.publish_type == 'github'
        uses: hoprnet/hopr-workflows/actions/setup-gcp@master
        with:
          google-credentials: ${{ secrets.GOOGLE_HOPRASSOCIATION_CREDENTIALS_REGISTRY }}
          install-sdk: "true"

      - name: Publish Artifact registry
        if: steps.version.outputs.publish_type == 'artifact-registry' || steps.version.outputs.publish_type == 'github'
        run: |
          gcloud artifacts generic upload --location=europe-west3 --repository="rust-binaries" --version=${{ steps.version.outputs.binary_version }} --package=blokli --source=result/bin/bloklid-${{ steps.vars.outputs.architecture}}
          if [[ "${{ inputs.version_type }}" == "release" ]]; then
            echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --batch --import
            binary=result/bin/bloklid-${{ steps.vars.outputs.architecture}}
            gpg --armor --output ${binary}.sig --detach-sign ${binary}
            shasum -a 256 ${binary} > ${binary}.sha256
            gpg --armor --sign ${binary}.sha256
            gcloud artifacts generic upload --location=europe-west3 --repository="rust-binaries" --version=${{ steps.version.outputs.binary_version }} --package=blokli --source=${binary}.sig
            gcloud artifacts generic upload --location=europe-west3 --repository="rust-binaries" --version=${{ steps.version.outputs.binary_version }} --package=blokli --source=${binary}.sha256
            gcloud artifacts generic upload --location=europe-west3 --repository="rust-binaries" --version=${{ steps.version.outputs.binary_version }} --package=blokli --source=${binary}.sha256.asc
          fi

      - name: Upload ${{ steps.vars.outputs.architecture }} binaries
        if: steps.version.outputs.publish_type == 'workflow'
        uses: actions/upload-artifact@v4
        with:
          name: binary-${{ steps.vars.outputs.architecture }}
          path: ${{ github.workspace }}/result/bin/*
