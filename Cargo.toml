[workspace]

resolver = "2"

members = ["bloklid", "db/api", "db/entity", "db/migration", "db/sql"]

[workspace.dependencies]
alloy = { version = "=1.0.27", default-features = false, features = [
  "contract",
  "essentials",
  "json-rpc",
  "k256",
  "node-bindings",
  "std",
] } # pinned to 1.0.16 due to many breaking changes in patch releases
anyhow = "1.0.99"
async-lock = "3.4.1"
async-signal = "0.2.12"
async-stream = "0.3.6"
async-trait = "0.1.89"
axum = { version = "0.8.4", features = ["http2", "ws"] }
axum-extra = { version = "0.10.1", features = ["query"] }
bincode = "2.0.1"
blokli-db-api = { path = "db/api" }
blokli-db-entity = { path = "db/entity" }
blokli-db-migration = { path = "db/migration" }
blokli-db-sql = { path = "db/sql" }
chrono = "0.4.42"
clap = { version = "4.5.47", features = ["derive", "env", "string"] }
dashmap = "6.1.0"
futures = "0.3.31"
hex = "0.4.3"
hex-literal = "1.0.0"
hopr-async-runtime = { git = "https://github.com/hoprnet/hoprnet" }
hopr-crypto-packet = { git = "https://github.com/hoprnet/hoprnet" }
hopr-crypto-random = { git = "https://github.com/hoprnet/hoprnet" }
hopr-crypto-types = { git = "https://github.com/hoprnet/hoprnet" }
hopr-internal-types = { git = "https://github.com/hoprnet/hoprnet" }
hopr-metrics = { git = "https://github.com/hoprnet/hoprnet" }
hopr-network-types = { git = "https://github.com/hoprnet/hoprnet" }
hopr-parallelize = { git = "https://github.com/hoprnet/hoprnet" }
hopr-path = { git = "https://github.com/hoprnet/hoprnet" }
hopr-platform = { git = "https://github.com/hoprnet/hoprnet" }
hopr-primitive-types = { git = "https://github.com/hoprnet/hoprnet" }
lazy_static = "1.5.0"
libp2p-identity = { version = "0.2.12", features = [
  "ed25519",
  "peerid",
  "rand",
] }
moka = { version = "0.12.10", features = ["future"] }
multiaddr = "0.18.2"
num_enum = "0.7.4"
rand = "0.9.2" # ignored in renovate, cannot be updated, dependencies reference old ones
ringbuffer = "0.16.0"
sea-orm = { version = "1.1.14", default-features = false, features = [
  "debug-print",
  "sqlx-sqlite",
  "with-chrono",
  "with-json",
] }
sea-orm-cli = { version = "1.1.14", default-features = false, features = [
  "codegen",
] }
sea-orm-migration = { version = "1.1.14", default-features = false, features = [
  "cli",
  "sqlx-sqlite",
  "with-chrono",
] }
sea-query = { version = "0.32.7", default-features = false }
sea-query-binder = { version = "0.7.0", default-features = false, features = [
  "sqlx-sqlite",
  "with-chrono",
] }
serde = { version = "1.0", features = ["derive"] }
serde_with = { version = "3.14.0" }
serde_yaml = "0.9"
smart-default = "0.7.1"
sqlx = { version = "0.8.6", default-features = false, features = [
  "macros",
  "migrate",
  "sqlite",
] }
strum = { version = "0.27.2", features = ["derive"] }
thiserror = "2.0.16"
tokio = { version = "1.47.1", features = [
  "fs",
  "macros",
  "rt-multi-thread",
  "sync",
  "time",
  "tracing",
] }
tower = { version = "0.5.2", default-features = false, features = ["util"] }
tracing = { version = "0.1.41" }
tracing-subscriber = { version = "0.3.20", features = [
  "env-filter",
  "fmt",
  "registry",
  "std",
] }
validator = { version = "0.20.0", features = ["derive"] }

[profile.dev]
panic = "abort"

# this profile focuses on the speed of compilation
[profile.candidate]
codegen-units = 16   # normal release default
inherits = "release"
lto = false          # do the smallest amount of link-time optimization
opt-level = 2
panic = "abort"
strip = true

# perform minimal optimizations to prevent stack overflows in large tests
[profile.test]
opt-level = 1

# this profile focuses on the best runtime performance and the smallest binary size
[profile.release]
codegen-units = 1
lto = "fat"
opt-level = 3
panic = "abort"
strip = true
